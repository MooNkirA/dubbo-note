<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="busi-mall">
        <!-- qos是Dubbo的在线运维命令 -->
        <!-- 是否启动QoS，默认是true -->
        <dubbo:parameter key="qos.enable" value="false"/>
        <!-- 是否允许远程访问，默认false -->
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
        <!-- 启动QoS绑定的端口，默认22222 -->
        <dubbo:parameter key="qos.port" value="22222"/>
    </dubbo:application>
    <!-- 注册中心地址 -->
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>

    <!-- name指示使用什么协议：dubbo/rmi/rest -->
    <dubbo:protocol id="d1" name="dubbo" port="20880"/>

    <!--
        提供者全局配置
            服务分组 group="test"
     -->
    <dubbo:provider timeout="3000"/>
    <!--
        消费者全局配置
            容错重试次数retries="1" 与第一次连接是分开。这里设置为1，只相当于第一次连接失败后，重试1次
     -->
    <dubbo:consumer retries="1"/>

    <dubbo:service interface="com.moon.dubbo.service.ProductService" ref="productService" protocol="d1"/>

    <!--
        启动时不检查 check="false"
        响应超时检查 timeout="1000"  如果响应超过1秒，会报错
        集群容错  cluster="failover" retries="2"，“failover”与“2”都是默认值，可以省略
        负载均衡  loadbalance="roundrobin"  此示例为轮询
        结果缓存  cache="lru"  基于最近最少使用原则删除多余缓存
        服务分组  group="group2"
        多版本    version="1.0"
    -->
    <dubbo:reference id="orderService" interface="com.moon.dubbo.service.OrderService" check="false"/>

    <!-- 异步调用 -->
    <dubbo:reference id="userService" interface="com.moon.dubbo.service.UserService">
        <dubbo:method name="getDetail" async="true"/>
    </dubbo:reference>
    <dubbo:reference id="payService" interface="com.moon.dubbo.service.PayService">
        <dubbo:method name="pay" async="true"/>
    </dubbo:reference>

    <!-- 事件通告回调 -->
    <dubbo:reference id="errorService" interface="com.moon.dubbo.service.ErrorService">
        <dubbo:method name="doSomeThing" onreturn="callBack.onSuccess" onthrow="callBack.onError"/>
    </dubbo:reference>

</beans>